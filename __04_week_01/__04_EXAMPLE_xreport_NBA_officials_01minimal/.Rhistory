cat("Date last run:", format(Sys.time(), "%Y-%m-%d"))
cat("\n")
cat("Stats MAS405 Spring 2020")
cat("\n")
## cat("Section #")
options(width=200, xtable.comment = FALSE)
projpath <- getwd()
if(!exists("xdbsock")) {
xdbsock <- ""
cat("\n", "Parameter 'xdbsock' not found, setting to empty string for general usage", "\n")
}
library(RMySQL)
library(knitr)
library(xtable)
### opts_knit$get("rmarkdown.pandoc.to")
drv <- dbDriver("MySQL")
############# db1
xdbuser <- Sys.getenv("MAS405_AWS_MY_DB_ADMIN_USER")
dzpw <- Sys.getenv("MAS405_AWS_MY_DB_ADMIN_PW")
xdbname <- Sys.getenv("MAS405_AWS_MY_DB_ADMIN_DBNAME")
xdbhost <- Sys.getenv("MAS405_AWS_MY_DB_ADMIN_HOST")
xdbport <- as.integer( Sys.getenv("MAS405_AWS_MY_DB_ADMIN_PORT") )
con <- dbConnect(drv, user=xdbuser, password=dzpw, dbname=xdbname, host=xdbhost, port=xdbport, unix.sock=xdbsock)
qstr <- "SELECT MIN(date), MAX(date) FROM nba_playersDate_1"
xx <- dbGetQuery(con, qstr)
xx
xMinDataDate <- xx[1, 1]
xMaxDataDate <- xx[1, 2]
xminDD <- format( strptime(xMinDataDate, "%Y%m%d"), "%Y-%m-%d")
xmaxDD <- format( strptime(xMaxDataDate, "%Y%m%d"), "%Y-%m-%d")
xpntsCO <- 55
qstr <-
paste0(
"SELECT * FROM nba_gameDate_2  ",
"JOIN nba_playersDate_1 ON (nba_gameDate_2.date=nba_playersDate_1.date AND nba_gameDate_2.VT=nba_playersDate_1.team)  ",
" OR (nba_gameDate_2.date=nba_playersDate_1.date AND nba_gameDate_2.HT=nba_playersDate_1.team)  ",
"WHERE nba_playersDate_1.pts > ", xpntsCO
)
qstr
xx <- dbGetQuery(con, qstr)
xx
df_out <- xx
class(df_out)
colnames(df_out) ##### non-unique column names!
colnames(df_out) <- make.names(names=colnames(df_out), unique = TRUE)
df_out
df_out_sub <- df_out[ , c("date", "VT", "HT", "min", "HTwin", "att", "refs", "team", "conf", "name", "min.1", "pts")]
library(kableExtra)
xcaption <- "NBA games in data where player scored more than 55 points."
#xxtb <- kable(df_out_sub, format="latex", caption=xcaption)
#kable_styling(xxtb, latex_options=c("scale_down", "HOLD_position", "striped") )
x.big <- suppressWarnings(xtable(df_out_sub, label='tabbig'))
## xx <- suppressWarnings(print(x.big, tabular.environment='longtable', include.rownames=FALSE, print.results=FALSE))
xx <- suppressWarnings(print(x.big, tabular.environment='tabular', include.rownames=FALSE, print.results=FALSE))
xx
yy <- strsplit("\\n", xx)
yy <- strsplit("\n", xx)
yy <- strsplit(xx, "\n")
yy
xx <- suppressWarnings(print(x.big, tabular.environment='tabular', include.rownames=FALSE, print.results=FALSE))
#print(x.big, tabular.environment='longtable',
#      floating=FALSE,include.rownames=FALSE,
#      hline.after = c(-1,nrow(x.big)),
#      add.to.row = list(pos = list(0),
#      command = "\\hline \\endhead "), file = "output.tex")
yy <- strsplit(xx, "\n")
yy <- c(yy[1], "\\tiny", yy[2:length(yy)])
writeLines(yy, "output.tex")
xx <- suppressWarnings(print(x.big, tabular.environment='tabular', include.rownames=FALSE, print.results=FALSE))
#print(x.big, tabular.environment='longtable',
#      floating=FALSE,include.rownames=FALSE,
#      hline.after = c(-1,nrow(x.big)),
#      add.to.row = list(pos = list(0),
#      command = "\\hline \\endhead "), file = "output.tex")
yy <- strsplit(xx, "\n")[[1]]
yy <- c(yy[1], "\\tiny", yy[2:length(yy)])
writeLines(yy, "output.tex")
grepl('Eric Lewis', df_out_sub[ , 'refs'])
df_EL <- df_out_sub[ xndx, c('date', 'VT', 'HT', 'name', 'pts') ]
xndx <- which(grepl('Eric Lewis', df_out_sub[ , 'refs']))
df_EL <- df_out_sub[ xndx, c('date', 'VT', 'HT', 'name', 'pts') ]
df_EL
unlink('~/Files/Creations/UCLAteaching/2020_02/MAS405/DBs/RDS_01/__04_xreport_NBA_officials_02bg/NBA_officials_highScoringPlayer_DZ_02bg_cache', recursive = TRUE)
